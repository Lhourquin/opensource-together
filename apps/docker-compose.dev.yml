services:
  # Base de données principale
  business-db:
    image: postgres:16
    env_file:
      - .env.dev
    environment:
      - POSTGRES_USER=${BUSINESS_DB_USER}
      - POSTGRES_PASSWORD=${BUSINESS_DB_PASSWORD}
      - POSTGRES_DB=${BUSINESS_DB_NAME}
    ports:
      - "${BUSINESS_DB_PORT}:5432"
    volumes:
      - business_db_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${BUSINESS_DB_USER} -d ${BUSINESS_DB_NAME}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Base de données Supertokens
  supertokens-db:
    image: postgres:16
    env_file:
      - .env.dev
    environment:
      - POSTGRES_USER=${SUPERTOKEN_DB_USER}
      - POSTGRES_PASSWORD=${SUPERTOKEN_DB_PASSWORD}
      - POSTGRES_DB=${SUPERTOKEN_DB_NAME}
    ports:
      - "${SUPERTOKEN_DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${SUPERTOKEN_DB_USER} -d ${SUPERTOKEN_DB_NAME}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Service d'authentification
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:10.1.0
    env_file:
      - .env.dev
    environment:
      - POSTGRESQL_CONNECTION_URI=postgresql://${SUPERTOKEN_DB_USER}:${SUPERTOKEN_DB_PASSWORD}@supertokens-db:5432/${SUPERTOKEN_DB_NAME}
    ports:
      - "3567:3567"
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      supertokens-db:
        condition: service_healthy
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  business_db_data:
  db_data:

networks:
  app_network:
    driver: bridge
